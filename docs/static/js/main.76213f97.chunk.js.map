{"version":3,"sources":["component/range.js","App.js","index.js"],"names":["MultiRangeSlider","min","max","useState","minValor","setMinVal","maxValor","setMaxVal","minValorRef","useRef","maxValorRef","range","getPercent","useCallback","value","Math","round","useEffect","minPorcentaje","maxPercent","current","style","left","width","maxPorcentaje","className","type","step","onChange","event","Number","target","zIndex","ref","App","src","rootElement","document","getElementById","ReactDOM","render"],"mappings":"6NA8EeA,EA1EU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IAC/B,EAA8BC,mBAASF,GAAvC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,mBAASD,GAAvC,mBAAOI,EAAP,KAAiBC,EAAjB,KACMC,EAAcC,iBAAOR,GACrBS,EAAcD,iBAAOP,GACrBS,EAAQF,iBAAO,MAEfG,EAAaC,uBAAY,SAACC,GAAD,OAAWC,KAAKC,OAAQF,EAAQb,IAAQC,EAAMD,GAAQ,OAAM,CAACA,EAAKC,IAqBjG,OAnBAe,qBAAU,WACR,IAAMC,EAAgBN,EAAWR,GAC3Be,EAAaP,EAAWF,EAAYU,SAEtCT,EAAMS,UACRT,EAAMS,QAAQC,MAAMC,KAApB,UAA8BJ,EAA9B,KACAP,EAAMS,QAAQC,MAAME,MAApB,UAA+BJ,EAAaD,EAA5C,QAED,CAACd,EAAUQ,IAEdK,qBAAU,WACR,IAAMC,EAAgBN,EAAWJ,EAAYY,SACvCI,EAAgBZ,EAAWN,GAE7BK,EAAMS,UACRT,EAAMS,QAAQC,MAAME,MAApB,UAA+BC,EAAgBN,EAA/C,QAED,CAACZ,EAAUM,IAGZ,sBAAKa,UAAU,mDAAf,UACE,uBACEC,KAAK,QACLC,KAAM,GACN1B,IAAKA,EACLC,IAAKA,EACLY,MAAOV,EACPwB,SAAU,SAACC,GACT,IAAMf,EAAQC,KAAKd,IAAI6B,OAAOD,EAAME,OAAOjB,OAAQR,EAAW,GAC9DD,EAAUS,GACVN,EAAYY,QAAUN,GAExBW,UAAU,oBACVJ,MAAO,CAAEW,OAAQ5B,EAAWF,EAAM,KAAO,OAE3C,uBACEwB,KAAK,QACLC,KAAM,GACN1B,IAAKA,EACLC,IAAKA,EACLY,MAAOR,EACPsB,SAAU,SAACC,GACT,IAAMf,EAAQC,KAAKb,IAAI4B,OAAOD,EAAME,OAAOjB,OAAQV,EAAW,GAC9DG,EAAUO,GACVJ,EAAYU,QAAUN,GAExBW,UAAU,uBAGZ,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,kBACf,qBAAKQ,IAAKtB,EAAOc,UAAU,kBAC3B,sBAAKA,UAAU,qBAAf,UAAqCrB,EAArC,aACA,sBAAKqB,UAAU,sBAAf,UAAsCnB,EAAtC,oBCnDO4B,G,MAZH,WACV,OACE,qCACE,qBAAKT,UAAU,iDAAf,SACE,qBAAKU,IAAI,mIAGX,cAAC,EAAD,CAAOlC,IAAK,EAAGC,IAAK,WCLpBkC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,I","file":"static/js/main.76213f97.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './range.css';\n\nconst MultiRangeSlider = ({ min, max }) => {\n  const [minValor, setMinVal] = useState(min);\n  const [maxValor, setMaxVal] = useState(max);\n  const minValorRef = useRef(min);\n  const maxValorRef = useRef(max);\n  const range = useRef(null);\n\n  const getPercent = useCallback((value) => Math.round(((value - min) / (max - min)) * 100), [min, max]);\n\n  useEffect(() => {\n    const minPorcentaje = getPercent(minValor);\n    const maxPercent = getPercent(maxValorRef.current);\n\n    if (range.current) {\n      range.current.style.left = `${minPorcentaje}%`;\n      range.current.style.width = `${maxPercent - minPorcentaje}%`;\n    }\n  }, [minValor, getPercent]);\n\n  useEffect(() => {\n    const minPorcentaje = getPercent(minValorRef.current);\n    const maxPorcentaje = getPercent(maxValor);\n\n    if (range.current) {\n      range.current.style.width = `${maxPorcentaje - minPorcentaje}%`;\n    }\n  }, [maxValor, getPercent]);\n\n  return (\n    <div className=\"container animate__animated animate__backInRight\">\n      <input\n        type=\"range\"\n        step={0.1}\n        min={min}\n        max={max}\n        value={minValor}\n        onChange={(event) => {\n          const value = Math.min(Number(event.target.value), maxValor - 1);\n          setMinVal(value);\n          minValorRef.current = value;\n        }}\n        className=\"thumb thumb--left\"\n        style={{ zIndex: minValor > max - 100 && '5' }}\n      />\n      <input\n        type=\"range\"\n        step={0.1}\n        min={min}\n        max={max}\n        value={maxValor}\n        onChange={(event) => {\n          const value = Math.max(Number(event.target.value), minValor + 1);\n          setMaxVal(value);\n          maxValorRef.current = value;\n        }}\n        className=\"thumb thumb--right\"\n      />\n\n      <div className=\"slider\">\n        <div className=\"slider__track\" />\n        <div ref={range} className=\"slider__range\" />\n        <div className=\"slider__left-value\">{minValor} €</div>\n        <div className=\"slider__right-value\">{maxValor} €</div>\n      </div>\n    </div>\n  );\n};\n\nMultiRangeSlider.propTypes = {\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default MultiRangeSlider;\n","import Range from './component/range';\nimport './styles.css';\n\nconst App = () => {\n  return (\n    <>\n      <div className=\"centrado animate__animated animate__backInLeft\">\n        <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/Logo_of_Mango_%28new%29.svg/2560px-Logo_of_Mango_%28new%29.svg.png\"></img>\n      </div>\n\n      <Range min={0} max={1000} />\n    </>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}